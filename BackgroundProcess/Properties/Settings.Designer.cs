/**
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * Copyright(c) 2018 LastPass.
 */

ï»¿//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BackgroundProcess.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.6.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsUnicodeUsed {
            get {
                return ((bool)(this["IsUnicodeUsed"]));
            }
            set {
                this["IsUnicodeUsed"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool AutoTypeCancelOnWindowChange {
            get {
                return ((bool)(this["AutoTypeCancelOnWindowChange"]));
            }
            set {
                this["AutoTypeCancelOnWindowChange"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool AutoTypeCancelOnTitleChange {
            get {
                return ((bool)(this["AutoTypeCancelOnTitleChange"]));
            }
            set {
                this["AutoTypeCancelOnTitleChange"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool AutoTypeAllowInterleaved {
            get {
                return ((bool)(this["AutoTypeAllowInterleaved"]));
            }
            set {
                this["AutoTypeAllowInterleaved"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool AutoTypeReleaseAltWithKeyPress {
            get {
                return ((bool)(this["AutoTypeReleaseAltWithKeyPress"]));
            }
            set {
                this["AutoTypeReleaseAltWithKeyPress"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool AutoTypeAdjustKeyboardLayout {
            get {
                return ((bool)(this["AutoTypeAdjustKeyboardLayout"]));
            }
            set {
                this["AutoTypeAdjustKeyboardLayout"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("-1")]
        public int AutoTypeInterKeyDelay {
            get {
                return ((int)(this["AutoTypeInterKeyDelay"]));
            }
            set {
                this["AutoTypeInterKeyDelay"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool UseClipboardViewerIgnoreFormat {
            get {
                return ((bool)(this["UseClipboardViewerIgnoreFormat"]));
            }
            set {
                this["UseClipboardViewerIgnoreFormat"] = value;
            }
        }
    }
}
